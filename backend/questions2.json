[
  
  {
    "title": "Generate Ticket Number",

    "objective": "<p>Jade wants to generate a ticket id as <strong>ai:src:dest:number</strong> where <strong>ai</strong> is value for Airline, <strong>src</strong> is first 3 character of source location, <strong>dest</strong> is first 3 character of destination location and <strong>number</strong> is auto-generated starting from 101.</p>",

    "task": "<p>You are given 3 string <em><strong>ai</strong></em>, <em><strong>src</strong></em> and <em><strong>dest</strong></em> and an Integer <strong>n</strong> where <strong>n</strong> is the no. of passengers. Print ticket ids of last 5 passengers each on new line and if no. of passenger is less than 5 then print all ticket ids each on new line.</p>",

    "constraints": "<p>1 &lt; = n &lt; = 10000</p>",

    "input_format": "<p>The first line contain string  <em><strong>ai</strong></em>.</p>\n<p>The second line contain string <em><strong>src</strong></em>.\n<p>The third line contain string <em><strong>des</strong></em>.\n<p>The fourth line contain an Integer <em><strong>n</strong></em>.</p>",

    "output_format": "<p>Print last 5 ticket ids each on new line.</p>",

    "samples": [
      {
        "input": "AI\nBangalore\nLondon\n10",
        "output": "AI:Ban:Lon:106\nAI:Ban:Lon:107\nAI:Ban:Lon:108\nAI:Ban:Lon:109\nAI:Ban:Lon:110",
        "explaination": ""
      }
    ],

    "testcase": [
      {
        "input": "AI\nBangalore\nLondon\n10",
        "output": "AI:Ban:Lon:106\nAI:Ban:Lon:107\nAI:Ban:Lon:108\nAI:Ban:Lon:109\nAI:Ban:Lon:110"
      }
    ]
  },

  {
    "title": "Find the culprit.",

    "objective": "<p>Find the smallest missing positive number in a given unsorted array.</p>",

    "task": "<p>Given an unsorted array <strong>a</strong> of size Integer <strong>n</strong>. You have to find the smallest missing positive number and print it.</p>",

    "constraints": "<p><strong>2 &lt;= n &lt;= 10^5</strong></p>",

    "input_format": "<p>The first line contains an Integer &nbsp;<strong>n</strong> <br />The next line contains <strong>n</strong>&nbsp;space-separated integers <strong>a[i]</strong>&nbsp;</p>",

    "output_format": "<p>An integer which is smallest positive missing number.</p>",

    "samples": [
      {
        "input": "7\n1 12 5 111 200 1000 10",
        "output": "2",
        "explaination": "<p>Smallest number is 1 and smallest missing positive number is 2.</p>"
      }
    ],

    "testcase": [
      {
        "input": "7\n1 12 5 111 200 1000 10",
        "output": "2"
      }
    ]
  },

  {
    "title": "Bumble Jumble",

    "objective": "<p>You will be given a sentence. Form another Bumble Jumble string where every <strong>nth</strong> character is swapped with <strong>(n+2)th</strong> if possible, while preserving the sequence of the words and spaces.</p>",

    "task": "<p>Given an string <strong>s</strong> i.e <strong>'Hello Codewar'</strong> without quotes. Swap H and l, C and d, e and a. So the result string will be <strong>leHlo doCawer</strong>. Print the result string.</p>",

    "constraints": "",

    "input_format": "<p>The first line string,&nbsp;<strong>s</strong></p>",

    "output_format": "<p>Print the resultant Bumble Jumble string.</p>",

    "samples": [
      {
        "input": "Hello Codewar",
        "output": "leHlo doCawer",
        "explaination": "<p>Swap H and l, C and d, e and a.</p>"
      }
    ],

    "testcase": [
      {
        "input": "Hello Codewar",
        "output": "leHlo doCawer"
      }
    ]
  },

  {
    "title": "Niven Number",

    "objective": "<p>Write a program to list all Niven numbers between two given positive numbers.</p>",

    "task": "<p>Given two inputs ‘a’ and ‘b’, your task is to print all the niven numbers within the given range.\nA niven number is the number which is divisible by the sum of its own digits.</p>",

    "constraints": "<p>1&lt;=a&lt;=10^5<br>1&lt;=b&lt;=10^5</p>",

    "input_format": "<p>The input will be of single line containing two inputs ‘a’ and ‘b’.</p>",

    "output_format": "<p>Print all the Niven numbers within the given range.</p>",

    "samples": [
      {
        "input": "9 12",
        "output": "9 10 12",
        "explaination": ""
      }
    ],
    
    "testcase": [
      {
        "input": "9 12",
        "output": "9 10 12"
      }
    ]
  }

]